<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_autocar</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>entity_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///INITIALIZE
event_inherited();

//=== Object Properties
//Properties
    move_speed = 10;
    turn_speed = 15;
    real_speed = 0;
    
    image_angle = 90;
    last_moved_timing = 0;
    xprev = x;
    yprev = y;
        
    sensor[0, 0] = 100;
    sensor[0, 1] = -50;
    sensor[1, 0] = 100;
    sensor[1, 1] = 50;
    sensor[2, 0] = 300;
    sensor[2, 1] = -15;
    sensor[3, 0] = 300;
    sensor[3, 1] = 15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall_hex">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision

//Stop
stop = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///OUTPUT
event_inherited();
if(stop) exit;

//Perform action:
    var left = nn_get_output(0);
    var right = nn_get_output(1);
    if(left &lt; 0.2) left = 0;
    if(right &lt; 0.2) right = 0;
    
    dir = right-left;
    image_angle = lerp(image_angle, image_angle+turn_speed*dir, 0.9);
    
//Move
    real_speed = min(move_speed, move_speed*nn_get_output(2));
    
    x += lengthdir_x(real_speed, image_angle);
    y += lengthdir_y(real_speed, image_angle); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///COMPUTE FITNESS
event_inherited();
if(stop) exit;

//Set up how you want to compute fitness
    last_moved_timing += 1;
    
    fitness += real_speed;
    if(distance_to_point(xprev, yprev) &gt; 32){
        last_moved_timing = 0;
        xprev = x;
        yprev = y;
    } else last_moved_timing++;
    
    if(last_moved_timing &gt; 60){ //Stop if we are circling on same position
        stop = true;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///INPUT
event_inherited();
if(stop) exit;

//Insert inputs:
    var _in;
    var _xx;
    var _yy;
    for(var i=0; i&lt;array_height_2d(sensor); i++){
        _xx = lengthdir_x(sensor[i, 0],image_angle+sensor[i, 1]);
        _yy = lengthdir_y(sensor[i, 0],image_angle+sensor[i, 1]);
        _in = collision_distance(x, y, x+_xx, y+_yy, obj_wall_hex, 20);
        nn_set_input(i, _in, 0, 1);
    }
    nn_set_input(i, real_speed, 0, move_speed);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
