<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create entities

randomize();
show_debug_overlay(true);

//How many entities we will skip mutation
    skip_mutate_count = 2;
    
    entity_count = 15;
    entity_object = noone;
    entity_spawn_x = -1;
    entity_spawn_y = -1;
    entities[0] = -1;
    
///How many entities are we randomizing weights    
    random_mutate_count = 2;
    balanced_fitness = 1.0;
    mutation_rate = 0.2;
    
//Data
    generation = 0;
    net_fitness = 0;
    highest_fitness = -99;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Graph

graph_h_all = nn_graph_create(20,room_height-20, 8, -50, 200);
nn_graph_set_color(graph_h_all, c_lime);

graph_h_cur = nn_graph_create(20,room_height-20, 8, -50, 200);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Control Game

//Control the game     
    var end_game = true;
    var _mov_count = 0;
    with(entity_object){
        if(!stop){
            _mov_count += 1;
            end_game = false;
        }
    }
    
//Stop if only highest exists    
    if(_mov_count&lt;=1)
        with(entities[entity_count-1]){
            stop = true;
        }
        
//If there is no active entity - restart (train)    
    if(end_game){
        event_user(3);
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Control Game Speed


if(keyboard_check_pressed(vk_right))
    room_speed += 10;
if(keyboard_check_pressed(vk_left))
    room_speed -= 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CREATE ENTITIES

//Create entities
    var i = 0;
    while(i &lt; entity_count){
        entities[i] = instance_create(entity_spawn_x, entity_spawn_y, entity_object);
        i++;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///TRAIN
generation++;

//Sort entities
    event_user(0);
    
//Update data    
    with(entity_object){
        if(fitness &gt; other.highest_fitness)
            other.highest_fitness = fitness;
    }

//Visualization
    var most_fit = entities[array_length_1d(entities)-1];
    nn_graph_create_add_bar(graph_h_cur, most_fit.fitness);
    nn_graph_create_add_bar(graph_h_all, highest_fitness);

    nn_visual_destroy();
    nn_visual_create(450, 50, most_fit.inputs, most_fit.weights, most_fit.output_weights);
            
//Mutate weights    
    event_user(1);
    
//Reset position    
    event_user(2);    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///RESET

with(entity_object){
    x = other.entity_spawn_x;
    y = other.entity_spawn_y;
    
    fitness = 0;
    stop = false;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CONTROL MUTATION

var _entities_count = array_length_1d(entities)-1;

//Save the best fit neural network data
    var m =_entities_count; //With highest fitness
    var predecessor = entities[m];
    if(predecessor.fitness &gt;= highest_fitness){
        nn_ctrl_save_best(predecessor, id);
        
        predecessor.image_blend = c_white;
    }
    
//Copy best genes
    for(var i=0; i&lt;_entities_count-1; i++){ //Don't include the highest fitness entity
        //Copy the highest fitness
        with(entities[i]){
            nn_ctrl_copy_best(other.id, id);
            
            image_blend = c_white;
        }
    }

//Mutate        
    var _rand_count = random_mutate_count;
    if(net_fitness&gt;balanced_fitness) _rand_count = 0; //Do not randomly mutate if our total fitness is high already
    
    for(var i=0; i&lt;_entities_count-skip_mutate_count; i++){
        //Randomize weights
        if(i &lt; _rand_count){
            with(entities[i]){
                nn_random_weight();
                nn_random_bias();
                
                //Color random
                color_hue = 10;//irandom(255);
                image_blend = make_colour_hsv(color_hue, 180, 230);
            }
        
        //Mutate
        } else {
            with(entities[i]){
                //Use common mutate rate
                mutation_rate = other.mutation_rate;

                nn_mutate_weight();
                nn_mutate_bias();
                
                //Color shift
                color_hue = 150; //predecessor.color_hue+irandom_range(-20, 20);
                image_blend = make_colour_hsv(color_hue, 180, 230);
            }
        }
    }
        

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SORT ENTITIES
/*
    Sort entities in ascending order
*/

//Bubble Sort
    var _entities_count = array_length_1d(entities);
    var _temp = noone;    
    for(var i=0; i&lt;_entities_count; i++){
        for(var j=0; j&lt;_entities_count-i-1; j++){
            if(entities[j].fitness &gt; entities[j+1].fitness){
                _temp = entities[j];
                
                entities[j] = entities[j+1]; //Swap
                entities[j+1] = _temp;
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Show debug data

draw_text(10, 30, "Generation: "+string(generation));

var count = 0;
with(entity_object){count += !stop;}
draw_text(10, 50, "Instance count: "+string(count));
draw_text(10, 70, "Highest fitness: "+string(highest_fitness));
draw_text(10, 90, "Mutation rate: "+string(mutation_rate*100)+"%");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Training

event_user(3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///RESTART
room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
